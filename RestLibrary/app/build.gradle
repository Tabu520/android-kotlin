plugins {
    id 'com.android.library'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 23
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'

    implementation 'commons-codec:commons-codec:1.10'

    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
}

task deleteOldJar(type: Delete){
    delete 'release/AndroidPlugin.jar'
}

//export jar
task exportJar(type: Copy){
    from('build/intermediates/aar_main_jar/debug/')
    into('release/')
    include('classes.jar')
    //the name
    rename('classes.jar','AndroidPlugin.jar')
}

exportJar.dependsOn(deleteOldJar,build)